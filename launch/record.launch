<launch>
    
    <!-- Camera namespace to save -->
    <arg name="camera" default="head_xtion"/>
    <arg name="with_depth" default="true"/>
    <arg name="with_rgb" default="true"/>
    
    <!-- Topics for compressed depth and rgb -->
    <arg name="compressed_depth" default="/$(arg camera)_compressed_depth"/>
    <arg name="compressed_rgb" default="/$(arg camera)_compressed_rgb"/>
    
    <node pkg="image_transport" type="republish" name="$(arg camera)_depth_compressor" output="screen" args="raw in:=/$(arg camera)/depth/image_raw libav out:=$(arg compressed_depth)" if="$(arg with_depth)"/>
    <node pkg="image_transport" type="republish" name="$(arg camera)_rgb_compressor" output="screen" args="raw in:=/$(arg camera)/rgb/image_raw theora out:=$(arg compressed_rgb)" if="$(arg with_rgb)"/>
    
    <!-- Record a rosbag, use regular expressions to exclude images -->
    <arg name="depth_logger" value="mongodb_$(arg camera)_depth_logger"/>
    <arg name="rgb_logger" value="mongodb_$(arg camera)_rgb_logger"/>
    <node pkg="mongodb_log" type="mongodb_log.py" name="$(arg rgb_logger)" args="--nodename-prefix=$(arg rgb_logger) $(arg compressed_rgb)/theora" output="screen" if="$(arg with_depth)"/>
    <node pkg="mongodb_log" type="mongodb_log.py" name="$(arg depth_logger)" args="--nodename-prefix=$(arg depth_logger) $(arg compressed_depth)/libav" output="screen" if="$(arg with_rgb)"/>
    
    <!-- For recording camera_info also, does not work atm -->

    
</launch>
